@page
@using Microsoft.AspNetCore.Identity
@inject UserManager<ETForum.Models.Korisnik> UserManager
@{
    var isAdmin = User.IsInRole("Administrator");
    var currentUserId = UserManager.GetUserId(User);
}
<script>
    var isAdmin = @isAdmin.ToString().ToLower();
    var currentUserId = '@currentUserId';
</script>

<style>
    .livechat-layout {
        max-width: 900px;
        margin: 40px auto;
        display: flex;
        height: 600px;
        background: #fff;
        border-radius: 14px;
        box-shadow: 0 8px 32px 0 rgba(0,0,0,0.11);
        overflow: hidden;
    }

    .users-list {
        width: 230px;
        background: #f5f7fa;
        border-right: 1px solid #ececec;
        padding: 0;
        margin: 0;
        overflow-y: auto;
    }

        .users-list h6 {
            font-weight: 700;
            margin: 1rem 1rem 0.5rem 1rem;
            color: #3498db;
        }

        .users-list ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .users-list li {
            display: flex;
            align-items: center;
            padding: 0.6rem 1.1rem;
            cursor: pointer;
            transition: background 0.15s;
            border-bottom: 1px solid #f0f0f0;
            font-size: 1rem;
        }

            .users-list li:hover {
                background: #e1f0ff;
            }

    .user-dot {
        width: 10px;
        height: 10px;
        border-radius: 50%;
        display: inline-block;
        margin-right: 9px;
        margin-bottom: 1px;
        border: 1.5px solid #e1f0ff;
    }

    .dot-online {
        background: #31db49;
    }

    .dot-offline {
        background: #bdbdbd;
    }

    .users-list .nickname {
        font-weight: 500;
        color: #222;
    }

    .chat-main {
        flex: 1;
        display: flex;
        flex-direction: column;
        background: #f9f9f9;
    }

    .messages-wrapper {
        flex-grow: 1;
        overflow-y: auto;
        padding: 15px 22px 0 22px;
        background: #fff;
    }

    #messagesList {
        list-style-type: none;
        margin: 0;
        padding: 0;
        font-size: 1rem;
    }

        #messagesList li {
            padding: 7px 12px;
            margin-bottom: 8px;
            border-radius: 8px;
            background: #e1f0ff;
            width: fit-content;
            max-width: 80%;
            box-shadow: 0 1px 2px rgba(0,0,0,0.08);
        }

    .input-area {
        display: flex;
        padding: 14px 22px;
        gap: 12px;
        background: #f5f7fa;
        border-top: 1px solid #e0e0e0;
    }

    #messageInput {
        flex-grow: 1;
        border: 1px solid #ccc;
        border-radius: 7px;
        padding: 9px 13px;
        font-size: 1rem;
    }

    #sendButton {
        background: #3498db;
        color: #fff;
        border: none;
        padding: 8px 22px;
        border-radius: 7px;
        font-weight: 600;
        cursor: pointer;
        transition: background 0.25s;
    }

        #sendButton:disabled {
            background: #a0cfff;
        }

        #sendButton:hover:not(:disabled) {
            background: #217dbb;
        }
    @@media(max - width: 800px)

    {
        .livechat-layout

    {
        flex-direction: column;
        height: auto;
    }

    .users-list {
        width: 100%;
        border-right: none;
        border-bottom: 1px solid #ececec;
    }

    .chat-main {
        min-height: 300px;
    }

    }
</style>

<!-- Layout -->
<div class="livechat-layout">
    <!-- LEFT: USERS LIST -->
    <aside class="users-list">
        <h6>Online korisnici</h6>
        <ul id="onlineUsersList"></ul>
        <h6 class="mt-3">Svi korisnici</h6>
        <ul id="allUsersList"></ul>
    </aside>
    <!-- RIGHT: CHAT -->
    <section class="chat-main">
        <div class="messages-wrapper">
            <ul id="messagesList"></ul>
        </div>
        <div class="input-area">
            <input type="text" id="messageInput" placeholder="Napišite poruku..." autocomplete="off" />
            <button id="sendButton" disabled>Pošalji</button>
        </div>
    </section>
</div>

<!-- Modal za BAN -->
<div class="modal fade" id="banUserModal" tabindex="-1" aria-labelledby="banUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form id="banUserForm">
            @Html.AntiForgeryToken()
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="banUserModalLabel">Zabrani korisnika</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Zatvori"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="korisnikId" id="banUserId" />
                    <div class="mb-2">
                        <label for="banNickname" class="form-label">Korisnik</label>
                        <input type="text" id="banNickname" class="form-control" disabled />
                    </div>
                    <div class="mb-2">
                        <label for="brojDana" class="form-label">Broj dana zabrane</label>
                        <input type="number" class="form-control" id="brojDana" name="brojDana" min="1" value="1" required />
                    </div>
                    <div class="mb-2">
                        <label for="razlog" class="form-label">Razlog zabrane</label>
                        <textarea class="form-control" id="razlog" name="razlog" rows="2" required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Otkaži</button>
                    <button type="submit" class="btn btn-danger">Zabrani</button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- SCRIPTS -->
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/chat.js?v=2"></script>

<script>
    // Svi korisnici/online korisnici
    let allUsers = [];
    let onlineUserIds = [];

    fetch('/api/UsersApi/all')
        .then(res => res.json())
        .then(data => {
            allUsers = data;
            renderUserLists();

            let myUser = allUsers.find(u => u.id === currentUserId);

            // (c) - Provjera zabrane i disable inputa/detalja
            if (myUser && myUser.isBannedLiveChat) {
                document.getElementById('messageInput').disabled = true;
                document.getElementById('sendButton').disabled = true;
                document.getElementById('messageInput').placeholder =
                    `Zabranjen pristup chatu${myUser.banDo ? ' do: ' + new Date(myUser.banDo).toLocaleString('sr-Latn') : ''}${myUser.banRazlog ? ' (' + myUser.banRazlog + ')' : ''}`;
            }
        });

    function renderUserLists() {
        let onlineUsers = allUsers.filter(u => onlineUserIds.includes(u.id));
        let htmlOnline = onlineUsers.map(u =>
            `<li>
                <span class="user-dot dot-online"></span>
                <span class="nickname">${u.nickname}</span>
                ${isAdmin && u.id !== currentUserId ?
                    (!u.isBannedLiveChat
                        ? `<button class="btn btn-danger btn-sm ms-2 ban-user-btn" data-userid="${u.id}" data-nickname="${u.nickname}">Zabrani</button>`
                        : `<span class="badge bg-warning text-dark ms-2">Zabranjen${u.banDo ? ' do ' + new Date(u.banDo).toLocaleString('sr-Latn') : ''}</span>`)
                    : ''
                }
            </li>`
        ).join('');

        let htmlAll = allUsers.map(u =>
            `<li>
                <span class="user-dot ${onlineUserIds.includes(u.id) ? 'dot-online' : 'dot-offline'}"></span>
                <span class="nickname">${u.nickname}</span>
                ${isAdmin && u.id !== currentUserId ?
                    (!u.isBannedLiveChat
                        ? `<button class="btn btn-danger btn-sm ms-2 ban-user-btn" data-userid="${u.id}" data-nickname="${u.nickname}">Zabrani</button>`
                        : `<span class="badge bg-warning text-dark ms-2">Zabranjen${u.banDo ? ' do ' + new Date(u.banDo).toLocaleString('sr-Latn') : ''}</span>`)
                    : ''
                }
            </li>`
        ).join('');

        document.getElementById('onlineUsersList').innerHTML = htmlOnline || "<li style='color:#aaa;font-size:0.95em;'>Nema trenutno online</li>";
        document.getElementById('allUsersList').innerHTML = htmlAll;

        if (isAdmin) addBanUserListeners();
    }


    // Listeneri za ban dugmad
    function addBanUserListeners() {
        document.querySelectorAll('.ban-user-btn').forEach(btn => {
            btn.onclick = function () {
                document.getElementById('banUserId').value = this.dataset.userid;
                document.getElementById('banNickname').value = this.dataset.nickname;
                var banModal = new bootstrap.Modal(document.getElementById('banUserModal'));
                banModal.show();
            }
        });
    }

    // AJAX za slanje bana
    document.getElementById('banUserForm').onsubmit = function (e) {
        e.preventDefault();
        let korisnikId = document.getElementById('banUserId').value;
        let brojDana = document.getElementById('brojDana').value;
        let razlog = document.getElementById('razlog').value;
    let token = document.querySelector('input[name="__RequestVerificationToken"]').value;

    fetch('/Korisnik/BanUser', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'RequestVerificationToken': token
        },
        body: JSON.stringify({ korisnikId, brojDana, razlog })
    })
    .then(res => res.text().then(msg => {
        if (res.ok) {
            Swal.fire('OK', 'Korisnik je zabranjen.', 'success');
        } else {
            Swal.fire('Greška', msg, 'error');
        }
        var banModal = bootstrap.Modal.getInstance(document.getElementById('banUserModal'));
        banModal.hide();
    }));
    }

    // SignalR dio
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/livechat")
        .build();

    connection.on("UpdateOnlineUsers", function (ids) {
        onlineUserIds = ids;
        renderUserLists();
    });

    connection.on("BannedInfo", function (msg) {
        Swal.fire({
            icon: 'error',
            title: 'Zabranjen pristup',
            text: msg
        });
    });

    connection.start();
</script>
